L = [240 180 120 53.5 60 156.5 115 115 115 204 100 ...
     169 354 323 270 260 31 150 150 150 150 150 150 150 150 150 150 150 ...
     124 31 200 146 146 169 182 182 240 200 200 235 226 ...
     367 270 280 336 37 200 113 165 75 185 175 175 80 115]*10^(-3);

D_i = [0 0 0 0 0 253 253 253 253 253 253 800 0 0 0 0 1136 ...
       1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 1040 ...
       1136 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 60 60 60 60 60 ...
       60 60 60]*10^(-3);

D_o = [250 438.9 410 400 383.2 400 400 400 520 660 760 1135 ...
       1640 1520 1422.3 1488 1250 1250 1250 1250 1250 1250 1250 ...
       1250 1250 1250 1250 1250 1250 1250 999.3 957.3 946.3 1060 ...
       1176.1 849.7 852 986.3 892.7 920.1 1072.8 819.2 915.1 ...
       927.7 888.5 1042 1180 1000 820 595 500 360 360 520 600]*10^(-3);

E= [2.06E+11 2.05E+11 2.04E+11 2.04E+11 2.03E+11 2.03E+11 2.02E+11 2.01E+11 ...
    2.00E+11 1.95E+11 1.86E+11 1.82E+11 1.86E+11 1.86E+11 1.86E+11 1.86E+11 ...
    1.77E+11 1.82E+11 1.82E+11 1.82E+11 1.82E+11 1.82E+11 1.82E+11 1.82E+11 ...
    1.82E+11 1.82E+11 1.82E+11 1.82E+11 1.82E+11 1.82E+11 1.83E+11 1.85E+11 ...
    1.87E+11 1.88E+11 1.89E+11 1.91E+11 1.93E+11 1.94E+11 1.96E+11 1.98E+11 ...
    1.96E+11 2.01E+11 2.03E+11 2.05E+11 2.06E+11 2.06E+11 2.06E+11 2.06E+11 ...
    2.05E+11 2.05E+11 2.05E+11 2.05E+11 2.05E+11 2.06E+11 2.06E+11];

rho=[7850 0 0 0 0 7850 7850 7850 7850 7850 0 0 7850 7850 7850 7850 7850 7850 7850 ...
    7850 7850 7850 7850 7850 7850 7850 7850 7850 7850 7850 7850 7850 7850 7850  ...
    7850 7850 7850 7850 7850 7850 7850 7850 7850 7850 7850 7850 7850 7850 7850 ...
    7850 7850 7850 7850 7850 0];

Added_Mass = [0 0 224.73 149.82 58.185 250.19 0 0 0 0 0 516.96 1043.2 0 0 0 0 0 0 0 0 0 0 0 0 ...
              0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 211.5 261.8 0 0 0 0 0 0 444];


pi = 3.1415;
R_o = D_o/2;
R_i = D_i/2;
S = pi.*(R_o.^2 - R_i.^2);
I = pi.*(R_o.^4 - R_i.^4)/4;
size_L = size(L);
n = size_L(2) + 1;
S_r = S;
nu = 0.3;
G = E./(2*(1 + nu));
a = (12*E.*I)./(G.*S_r.*L.^2);
M = zeros(n*4);
C = zeros(n*4);
K = zeros(n*4);
for k = 0:n - 2
    M_0 = [156    0     0      22*L(k+1)   54    0     0       -13*L(k+1);
       0      156   -22*L(k+1)  0      0     54    13*L(k+1)     0;
       0     -22*L(k+1)  4*L(k+1)^2  0      0    -13*L(k+1) -3*L(k+1)^2    0;
       22*L(k+1)   0     0      4*L(k+1)^2  13*L(k+1)  0     0       -3*L(k+1)^2;
       54     0     0      13*L(k+1)   156   0     0       -22*L(k+1);
       0      54    -13*L(k+1)  0      0     156   22*L(k+1)     0;
       0      13*L(k+1) -3*L(k+1)^2  0      0     22*L(k+1)  4*L(k+1)^2    0;
      -13*L(k+1)   0     0     -3*L(k+1)^2  -22*L(k+1)  0    0        4*L(k+1)^2]*rho(k+1)*S(k+1)*L(k+1)/(420);

    C_ref = [0   -36  -3*L(k+1)    0      0    36     -3*L(k+1)    0;
         36   0    0     -3*L(k+1)   -36   0       0     -3*L(k+1);
         3*L(k+1)  0    0     -4*L(k+1)^2 -3*L(k+1)  0       0      L(k+1)^2;
         0    3*L(k+1)  4*L(k+1)^2  0      0   -3*L(k+1)    -L(k+1)^2    0;
         0    36   3*L(k+1)    0      0   -36      3*L(k+1)    0;
        -36   0    0      3*L(k+1)    36   0       0      3*L(k+1);
         3*L(k+1)  0    0      L(k+1)^2   -3*L(k+1)  0       0     -4*L(k+1)^2;
         0    3*L(k+1) -L(k+1)^2    0      0   -3*L(k+1)     4*L(k+1)^2  0]*(rho(k+1)*I(k+1)/(15*L(k+1)));

    K_C = [12   0    0        -6*L(k+1)      -12     0     0        -6*L(k+1);
    0    12   6*L(k+1)       0         0     -12    6*L(k+1)       0;
    0    6*L(k+1) (4+a(k+1))*L(k+1)^2  0         0     -6*L(k+1)  (2-a(k+1))*L(k+1)^2  0;
    -6*L(k+1)  0    0        (4+a(k+1))*L(k+1)^2  6*L(k+1)    0     0        (2-a(k+1))*L(k+1)^2;
    -12   0    0         6*L(k+1)       12     0     0         6*L(k+1);
    0   -12  -6*L(k+1)       0         0      12   -6*L(k+1)       0;
    0    6*L(k+1) (2-a(k+1))*L(k+1)^2  0         0     -6*L(k+1)  (4+a(k+1))*L(k+1)^2  0;
    -6*L(k+1)  0    0        (2-a(k+1))*L(k+1)^2  6*L(k+1)    0     0        (4+a(k+1))*L(k+1)^2;]*E(k+1)*I(k+1)/((1+a(k+1))*L(k+1)^3);

    if rho(k+1) ~= 0
        M_s = [36   0    0     -3*L(k+1)   -36   0       0     -3*L(k+1);
           0    36   3*L(k+1)    0      0   -36      3*L(k+1)    0;
           0    3*L(k+1)  4*L(k+1)^2  0      0   -3*L(k+1)    -L(k+1)^2    0;
          -3*L(k+1)  0    0      4*L(k+1)^2  3*L(k+1)  0       0     -L(k+1)^2;
          -36   0    0      3*L(k+1)    36   0       0      3*L(k+1);
           0   -36  -3*L(k+1)    0      0    36     -3*L(k+1)    0;
           0    3*L(k+1) -L(k+1)^2    0      0   -3*L(k+1)     4*L(k+1)^2  0;
          -3*L(k+1)  0    0     -L(k+1)^2    3*L(k+1)  0       0      4*L(k+1)^2]*rho(k+1)*I(k+1)/(30*L(k+1));

        C_disk = zeros(8,8);
    else
        I_Dx = 0.25*Added_Mass(k+1).*(R_o(k+1).^2-R_i(k+1).^2);
        I_Dy = 0.5*Added_Mass(k+1).*(R_o(k+1).^2-R_i(k+1).^2);
        M_s = [Added_Mass(k+1)/2 0 0 0 0 0 0 0
               0 Added_Mass(k+1)/2 0 0 0 0 0 0
               0 0 I_Dx/2 0 0 0 0 0
               0 0 0 I_Dx/2 0 0 0 0
               0 0 0 0 Added_Mass(k+1)/2 0 0 0
               0 0 0 0 0 Added_Mass(k+1)/2 0 0
               0 0 0 0 0 0 I_Dx/2 0
               0 0 0 0 0 0 0 I_Dx/2];

        C_disk = [0 0 0             0                0 0 0 0;
                  0 0 0             0                0 0 0 0;
                  0 0 0            -I_Dy/2    0 0 0 0;
                  0 0 I_Dy 0/2                0 0 0 0;
                  0 0 0             0                0 0 0 0;
                  0 0 0             0                0 0 0 0;
                  0 0 0             0 0 0            0 -I_Dy/2;
                  0 0 0             0 0 0 -I_Dy/2 0];
    end
    if 1+k*4 < n*4 - 4
        for i = 0:7
            for j = 0:7
                M(1+k*4+i,1+k*4+j) = M(1+k*4+i,1+k*4+j) + M_0(1+i,1+j) + M_s(1+i,1+j);
                C(1+k*4+i,1+k*4+j) = C(1+k*4+i,1+k*4+j) + C_ref(1+i,1+j) + C_disk(1+i,1+j);
                K(1+k*4+i,1+k*4+j) = K(1+k*4+i,1+k*4+j) + K_C(1+i,1+j);
            end
        end
    end
end

%============== BEARINGS AND SEALS ================
method = 'cubicinterp';
speed_t = [367.8893038, 594.9139299, 964.0472719, 1495.62474, 2253.969678, 3272.634911, 6452.897062, 10064.89605, 14548.34974, 54432.60107];
K11_t = [1.96E+09, 1.31E+09, 9.07E+08, 7.03E+08, 5.52E+08, 4.67E+08, 4.23E+08, 4.75E+08, 5.55E+08, 1.24E+09];
K12_t = [2.69E+09, 1.69E+09, 1.08E+09, 6.90E+08, 3.55E+08, 1.98E+08, -2.94E+08, -8.76E+08, -1.59E+09, -6.98E+09];
K21_t = [7.65E+09, 5.18E+09, 3.64E+09, 2.83E+09, 2.26E+09, 1.95E+09, 1.74E+09, 1.75E+09, 2.03E+09, 5.57E+09];
K22_t = [2.42E+10, 1.54E+10, 1.04E+10, 7.46E+09, 5.43E+09, 4.52E+09, 3.75E+09, 4.13E+09, 5.16E+09, 1.69E+10];
D11_t = [1.12E+07, 4.66E+06, 2.23E+06, 1.55E+06, 1.11E+06, 8.13E+05, 7.18E+05, 6.98E+05, 6.89E+05, 5.73E+05];
D12_t = [2.89E+07, 9.77E+06, 3.49E+06, 2.07E+06, 1.01E+06, 2.62E+05, -3.17E+05, -6.29E+05, -8.34E+05, -1.03E+06];
D21_t = [2.80E+07, 9.30E+06, 3.27E+06, 2.03E+06, 1.08E+06, 2.93E+05, -3.19E+05, -6.32E+05, -8.38E+05, -1.04E+06];
D22_t = [2.51E+08, 1.08E+08, 4.91E+07, 2.75E+07, 1.65E+07, 1.02E+07, 5.80E+06, 4.69E+06, 4.47E+06, 4.26E+06];
K11_fit_t = fit(speed_t',K11_t',method);
K12_fit_t = fit(speed_t',K12_t',method);
K21_fit_t = fit(speed_t',K21_t',method);
K22_fit_t = fit(speed_t',K22_t',method);
D11_fit_t = fit(speed_t',D11_t',method);
D12_fit_t = fit(speed_t',D12_t',method);
D21_fit_t = fit(speed_t',D21_t',method);
D22_fit_t = fit(speed_t',D22_t',method);
speed_in = 60; % RPM
if speed_in < speed_t(1)
    K11_fit_t = K11_t(1)
    K12_fit_t = K12_t(1)
    K21_fit_t = K21_t(1)
    K22_fit_t = K22_t(1)
    D11_fit_t = D11_t(1)
    D12_fit_t = D12_t(1)
    D21_fit_t = D21_t(1)
    D22_fit_t = D22_t(1)
elseif speed_in > speed_t(end)
    K11_fit_t = K11_t(end)
    K12_fit_t = K12_t(end)
    K21_fit_t = K21_t(end)
    K22_fit_t = K22_t(end)
    D11_fit_t = D11_t(end)
    D12_fit_t = D12_t(end)
    D21_fit_t = D21_t(end)
    D22_fit_t = D22_t(end)
else
    K11_fit_t = K11_fit_t(speed_in)
    K12_fit_t = K12_fit_t(speed_in)
    K21_fit_t = K21_fit_t(speed_in)
    K22_fit_t = K22_fit_t(speed_in)
    D11_fit_t = D11_fit_t(speed_in)
    D12_fit_t = D12_fit_t(speed_in)
    D21_fit_t = D21_fit_t(speed_in)
    D22_fit_t = D22_fit_t(speed_in)
end

speed_c = [387.2429791, 626.2107655, 1014.763228, 1574.305569, 2372.545013, 3444.799508, 6792.366771, 10594.38339, 15313.69963, 57296.15507];
K11_c = [1.86E+09, 1.24E+09, 8.60E+08, 6.66E+08, 5.23E+08, 4.42E+08, 4.01E+08, 4.50E+08, 5.26E+08, 1.18E+09];
K12_c = [2.55E+09, 1.60E+09, 1.03E+09, 6.54E+08, 3.36E+08, 1.88E+08, -2.78E+08, -8.30E+08, -1.51E+09, -6.61E+09];
K21_c = [7.25E+09, 4.90E+09, 3.45E+09, 2.68E+09, 2.14E+09, 1.85E+09, 1.65E+09, 1.66E+09, 1.92E+09, 5.27E+09];
K22_c = [2.29E+10, 1.46E+10, 9.85E+09, 7.07E+09, 5.15E+09, 4.28E+09, 3.55E+09, 3.91E+09, 4.88E+09, 1.61E+10];
D11_c = [1.01E+07, 4.19E+06, 2.00E+06, 1.39E+06, 1.00E+06, 7.31E+05, 6.46E+05, 6.28E+05, 6.20E+05, 5.15E+05];
D12_c = [2.61E+07, 8.79E+06, 3.14E+06, 1.86E+06, 9.12E+05, 2.36E+05, -2.86E+05, -5.66E+05, -7.51E+05, -9.29E+05];
D21_c = [2.52E+07, 8.37E+06, 2.94E+06, 1.83E+06, 9.71E+05, 2.64E+05, -2.87E+05, -5.69E+05, -7.54E+05, -9.32E+05];
D22_c = [2.26E+08, 9.69E+07, 4.42E+07, 2.47E+07, 1.48E+07, 9.22E+06, 5.22E+06, 4.22E+06, 4.02E+06, 3.83E+06];
K11_fit_c = fit(speed_c',K11_c',method);
K12_fit_c = fit(speed_c',K12_c',method);
K21_fit_c = fit(speed_c',K21_c',method);
K22_fit_c = fit(speed_c',K22_c',method);
D11_fit_c = fit(speed_c',D11_c',method);
D12_fit_c = fit(speed_c',D12_c',method);
D21_fit_c = fit(speed_c',D21_c',method);
D22_fit_c = fit(speed_c',D22_c',method);
if speed_in < speed_c(1)
    K11_fit_c = K11_c(1)
    K12_fit_c = K12_c(1)
    K21_fit_c = K21_c(1)
    K22_fit_c = K22_c(1)
    D11_fit_c = D11_c(1)
    D12_fit_c = D12_c(1)
    D21_fit_c = D21_c(1)
    D22_fit_c = D22_c(1)
elseif speed_in > speed(end)
    K11_fit_c = K11_c(end)
    K12_fit_c = K12_c(end)
    K21_fit_c = K21_c(end)
    K22_fit_c = K22_c(end)
    D11_fit_c = D11_c(end)
    D12_fit_c = D12_c(end)
    D21_fit_c = D21_c(end)
    D22_fit_c = D22_c(end)
else
    K11_fit_c = K11_fit_c(speed_in)
    K12_fit_c = K12_fit_c(speed_in)
    K21_fit_c = K21_fit_c(speed_in)
    K22_fit_c = K22_fit_c(speed_in)
    D11_fit_c = D11_fit_c(speed_in)
    D12_fit_c = D12_fit_c(speed_in)
    D21_fit_c = D21_fit_c(speed_in)
    D22_fit_c = D22_fit_c(speed_in)
end

kxx(1)=K11_fit_t;
kxz(1)=K12_fit_t;
kzx(1)=K21_fit_t;
kzz(1)=K22_fit_t;
cxx(1)=D11_fit_t;
cxz(1)=D12_fit_t;
czx(1)=D21_fit_t;
czz(1)=D22_fit_t;

kxx(2)=K11_fit_c;
kxz(2)=K12_fit_c;
kzx(2)=K21_fit_c;
kzz(2)=K22_fit_c;
cxx(2)=D11_fit_c;
cxz(2)=D12_fit_c;
czx(2)=D21_fit_c;
czz(2)=D22_fit_c;


n_bearings = [7 53];
size_n_bear = size(n_bearings);
for bearing = n_bearings
    k = bearing - 1;
    %     if 1+k*4 < n*4
    if k ~= 53 - 1
        K_bearing =-[kxx(size_n_bear(1))  kxz(size_n_bear(1)) 0 0;
                     kzx(size_n_bear(1))  kzz(size_n_bear(1)) 0 0;
                     0   0 0   0;
                     0   0 0   0];
    else
        K_bearing =-[kxx(size_n_bear(2))  kxz(size_n_bear(2)) 0 0;
                     kzx(size_n_bear(2))  kzz(size_n_bear(2)) 0 0;
                     0   0 0   0;
                     0   0 0   0];
    end
    for i = 0:3
        for j = 0:3
            K(1+k*4+i,1+k*4+j)= K(1+k*4+i,1+k*4+j) + K_bearing(1+i,1+j);
        end
    end
    %     end
    k = bearing - 1;
    %     if 1+k*4 < n*4
    if k ~= 53 - 1
        C_bearing =-[cxx(size_n_bear(1))  cxz(size_n_bear(1)) 0 0;
                     czx(size_n_bear(1))  czz(size_n_bear(1)) 0 0;
                     0   0 0   0;
                     0   0 0   0];
    else
        C_bearing =-[cxx(size_n_bear(2))  cxz(size_n_bear(2)) 0 0;
                     czx(size_n_bear(2))  czz(size_n_bear(2)) 0 0;
                     0   0 0   0;
                     0   0 0   0];
    end

    for i = 0:3
        for j = 0:3
            C(1+k*4+i,1+k*4+j)= C(1+k*4+i,1+k*4+j) + C_bearing(1+i,1+j);
        end
    end
    %     end
end

syms omega
assume(omega,'real')
C = C*omega;

syms lan  % lan = 1/r
A = [zeros(n*4)  M;M  C];
B = [M  zeros(n*4);zeros(n*4)  -K];
clear w

A_num = vpa(A,5);
B_num = vpa(B,5);
omega = speed_in*2*pi/60;
A_num_new = subs(A_num,'omega',omega);
% [V_new,D_new]=eigs(pinv(A_num_new)*(B_num));
[V_new,D_new]=eig(lsqminnorm(double(A_num_new),double(B_num)));
w_sorted = sort(imag(diag(D_new)),'ascend');
w(:,round(omega/50) + 1) = w_sorted;
F = w./(2*pi);
F(n*4:n*4.5)
